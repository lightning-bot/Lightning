name: 'Run Unit Tests'

on:
  push:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  test:
    services:
        postgres:
          image: postgres:15
          env:
            POSTGRES_USER: lightning
            POSTGRES_PASSWORD: postgres_actions
            POSTGRES_DB: postgres
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - 5432:5432
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install Project
        run: poetry install --no-interaction --no-ansi -vv
      - name: Install pytest
        run: poetry add --dev pytest
      - name: Run All Tests
        run: |
            poetry run pytest
        env:
            GHA_POSTGRES_HOST: 123
